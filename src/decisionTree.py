import numpy as np
import pandas as pd
from sklearn.cross_validation import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn import tree

decTree = tree.DecisionTreeClassifier(criterion='entropy', random_state=0)
classLabels = [3, 4, 5, 11, 12]
data = [[5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [8, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 0, 1],
        [3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0],
        [6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1, 0], [8, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
        [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0], [9, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [8, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [8, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0],
        [8, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0], [1, 0, 4, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1],
        [5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1], [1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0], [6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
        [1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0],
        [8, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [9, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0],
        [1, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1],
        [1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0]
        ]
answers = [5, 4, 11, 5, 11, 5, 11, 11, 2, 2, 5, 11, 11, 11, 11, 4, 11, 12, 11, 11, 11, 11, 11, 2, 5, 3, 13, 2, 3, 11,
           11, 9, 11, 1, 6, 11, 8, 12, 7,
           ]
decTree.fit(data, answers)
print(decTree.predict([1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1]))
categories = {1: wn.synset('animal.n.01'), 2: wn.synset('person.n.01'),
              3: wn.synset('country.n.02'), 4: wn.synset('city.n.01'), 5: wn.synset('year.n.01'),
              6: wn.synset('month.n.01'), 7: wn.synset('day.n.01'),
              8: wn.synset('body_part.n.01'), 9: wn.synset('language.n.01'), 10: wn.synset('action.n.01'),
              11: wn.synset('number.n.01'), 12: wn.synset('product.n.02'), 13: wn.synset('organization.n.01'),
              14: wn.synset('event.n.01')}
